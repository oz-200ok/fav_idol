name: Code Quality Checks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: test_fav_idol
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_DEBUG: "False"
      DJANGO_ALLOWED_HOSTS: "localhost"
      POSTGRES_DB: "test_fav_idol"
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: "localhost"
      POSTGRES_PORT: "5432"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install Packages & Libraries
        run: |
          poetry install --no-root

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h 127.0.0.1 -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}; do
            echo "Waiting for database to be ready..."
            sleep 2
          done

      - name: Create Test Database
        run: |
          export PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }}  # 비밀번호 환경 변수 설정
          psql -h 127.0.0.1 -U ${{ secrets.POSTGRES_USER }} -d postgres -c "SELECT 1 FROM pg_database WHERE datname = 'test_fav_idol' LIMIT 1;" | grep -q 1 || psql -h 127.0.0.1 -U ${{ secrets.POSTGRES_USER }} -d postgres -c "CREATE DATABASE test_fav_idol;"

      - name: Run Django Migration
        run: |
          poetry run python manage.py migrate

      - name: Run Tests
        run: |
          poetry run python manage.py test
